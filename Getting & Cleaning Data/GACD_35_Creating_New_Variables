# GACD_35_Creating_New_Variables

# download restaurant data
if(!file.exists("./data")){dir.create("./data")}
fileURL<-"http://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/restaurants.csv")
restData <- read.csv("./data/restaurants.csv")

# creating sequences
s1 <- seq(1,10,by=2)
s1

s2 <- seq(1,10,length=3)
s2

# generate a sequence of consecutive indices
# - useful for looping 
x <- c(1,3,10,50,100)
seq(along=x)


# subsetting variables
restData$nearMe = restData$neighborhood %in% c("Roland Park","Homeland")
table(restData$nearMe)

# creating binary variables
restData$zipWrong = ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong, restData$zipCode < 0)

# creating categorical variables
restData$zipGroups = cut(restData$zipCode,breaks=quantile(restData$zipCode))
table(restData$zipGroups)

table(restData$zipGroups,restData$zipCode)

# Easier cutting
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)

# Creating factor variables
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData$zcf)

# Levels of factor variables
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesnofac = factor(yesno,levels=c("yes","no"))
# reorder the level so that the level specified by ref comes first
relevel(yesnofac,ref="yes")

as.numeric(yesnofac)

# Cutting produces factor variables
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)

# Using the mutate function
library(plyr)
library(Hmisc)

# function mutate not found (?) BOE comp
restData2 = mutate(restData,zipGroups(zipCode,g=4))
table(restData$zipGroups)









