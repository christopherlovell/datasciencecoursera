# GACD_33_Summarising_Data

# download restaurant data
if(!file.exists("./data")){dir.create("./data")}
fileURL<-"http://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/restaurants.csv")
restData <- read.csv("./data/restaurants.csv")

head(restData,n=3)
tail(restData,n=3)

summary(restData)

str(restData)

#show quantile data for a given column
quantile(restData$councilDistrict,na.rm=TRUE)
quantile(restData$councilDistrict,probs=c(0.5,0.75,0.9))

# convert to a table
# -- useNA="ifany" adds a new column at the end
# that details the number of missing values
table(restData$zipCode,useNA="ifany")

#matrix of both variables
table(restData$councilDistrict,restData$zipCode)

# gives you number of missing values
sum(is.na(restData$councilDistrict))
# checks for any missing values; returns bool
any(is.na(restData$councilDistrict))

# checks if all entries satisfy condition
# i.e. above zero. returns Bool
all(restData$zipCode > 0)

# sum across columns
colSums(is.na(restData))

# all colSums equal to zero
# i.e. no missing values in any column
all(colSums(is.na(restData))==0)

# check for quoted zipCode(s)
# returns number with/without
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))

# returns only the rows equal to the quoted zipcodes
restData[restData$zipCode %in% c("21212","21213"),]

# give size of data
# - second command provides formatting
object.size(restData)
print(object.size(restData),units="Mb")

# cross tabs also available
# - these can be used to create flat tables 
#  (with multiple varibales along each axis
#  condensed into a single table)

